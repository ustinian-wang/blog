import{_ as s,o as a,c as i,a5 as t}from"./chunks/framework.Cjg1mlEg.js";const e="/blog/assets/5b2c305e278c857a4448cc7244b0758b0af5888c6e623e188655ad7999ee4e1b7356bf88e94199829032e10b5e63b4e5464759fea8de00d0c23bc5aaeaf0f1b7.BmVkmoud.png",b=JSON.parse('{"title":"troubleshooting","description":"","frontmatter":{},"headers":[],"relativePath":"docs/notes/troubleshooting-common.md","filePath":"docs/notes/troubleshooting-common.md","lastUpdated":1724498844000}'),n={name:"docs/notes/troubleshooting-common.md"},h=t(`<h1 id="troubleshooting" tabindex="-1">troubleshooting <a class="header-anchor" href="#troubleshooting" aria-label="Permalink to &quot;troubleshooting&quot;">​</a></h1><h2 id="npm-yarn-包管理工具" tabindex="-1">npm/yarn 包管理工具 <a class="header-anchor" href="#npm-yarn-包管理工具" aria-label="Permalink to &quot;npm/yarn 包管理工具&quot;">​</a></h2><h3 id="q-出现-certificate-has-expired-错误" tabindex="-1">Q：出现“certificate has expired”错误 <a class="header-anchor" href="#q-出现-certificate-has-expired-错误" aria-label="Permalink to &quot;Q：出现“certificate has expired”错误&quot;">​</a></h3><p>问题原因：https验证出问题 解决方式：运行 <code>yarn config set strict-ssl false</code> （禁用SSL严格验证）</p><h3 id="q-install超时" tabindex="-1">Q：install超时 <a class="header-anchor" href="#q-install超时" aria-label="Permalink to &quot;Q：install超时&quot;">​</a></h3><p>问题原因：npm镜像被墙了 确认步骤： 1. ping下超时的ip，看是什么情况：部分丢包还是全部丢包 2. 保证镜像一致：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">faiscO0DESKTOP-C6M762H</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> MINGW64d/softwa</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> config</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> get</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> registry</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">https://registry.npm.taobao.org/</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">faiscO@DESKTOP-C6M762H</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> MINGW64d/softwa</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> yarn</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> config</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> get</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> registry</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">https://registry.npm.taobao.org</span></span></code></pre></div><p>解决方式： 1. 部分丢包：请重新安装依赖 2. 全部丢包：参考<code>Q：出现 error Error: getaddrinfo ENoTFoUND registry.nlark.com</code></p><h3 id="q-出现-error-error-getaddrinfo-enotfound-registry-nlark-com" tabindex="-1">Q：出现 error Error: getaddrinfo ENoTFoUND registry.nlark.com <a class="header-anchor" href="#q-出现-error-error-getaddrinfo-enotfound-registry-nlark-com" aria-label="Permalink to &quot;Q：出现 error Error: getaddrinfo ENoTFoUND registry.nlark.com&quot;">​</a></h3><p>问题原因：一般是项目的package-lock.json或yarn.lock依赖镜像域名过期， 解决方案： 1. 将lock文件中的registry.nlark.com替换为registry.npmmirror.com或其他第三方国内镜像，第三方可自行搜索引擎</p><h3 id="q-node-sass安装出错" tabindex="-1">Q: node-sass安装出错 <a class="header-anchor" href="#q-node-sass安装出错" aria-label="Permalink to &quot;Q: node-sass安装出错&quot;">​</a></h3><p>问题表现：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">error</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> D:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\c</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">henjiajin</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\r</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">es</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\m</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">allhelper-res</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\n</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">ode_modules</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\n</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">ode-sass:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> command</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> failed</span></span></code></pre></div><p>解决方式： 1. 用 管理者权限运行power shell 执行 <code>npm install --global --production windows-build-tools</code> 2. 设置镜像：<code>yarn --registry=http://registry.npm.faidev.cc</code></p><h3 id="q-如何仓库设置镜像" tabindex="-1">Q: 如何仓库设置镜像 <a class="header-anchor" href="#q-如何仓库设置镜像" aria-label="Permalink to &quot;Q: 如何仓库设置镜像&quot;">​</a></h3><blockquote><p>临时设置\\</p></blockquote><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --registry=https://registry.npmjs.org</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">yarn</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --registry=https://registry.yarnpkg.com</span></span></code></pre></div><blockquote><p>全局设置</p></blockquote><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> config</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> set</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> registry</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://registry.npmjs.org</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">yarn</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> config</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> set</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> registry</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://registry.yarnpkg.com</span></span></code></pre></div><blockquote><p>镜像清单</p></blockquote><table tabindex="0"><thead><tr><th>镜像</th><th>作用</th></tr></thead><tbody><tr><td><a href="https://registry.npm.taobao.org" target="_blank" rel="noreferrer">https://registry.npm.taobao.org</a></td><td><s>淘宝镜像（官方逐步废弃）</s></td></tr><tr><td><a href="https://registry.npmmirror.com" target="_blank" rel="noreferrer">https://registry.npmmirror.com</a></td><td>淘宝镜像</td></tr><tr><td><a href="https://registry.npmjs.org" target="_blank" rel="noreferrer">https://registry.npmjs.org</a></td><td>npm官方</td></tr><tr><td><a href="https://registry.yarnpkg.com" target="_blank" rel="noreferrer">https://registry.yarnpkg.com</a></td><td>yarn官方</td></tr><tr><td><a href="http://registry.npm.faidev.cc" target="_blank" rel="noreferrer">http://registry.npm.faidev.cc</a></td><td>公司</td></tr></tbody></table><h2 id="git" tabindex="-1">GIT <a class="header-anchor" href="#git" aria-label="Permalink to &quot;GIT&quot;">​</a></h2><h3 id="q-前端代码在某个环境没生效" tabindex="-1">Q: 前端代码在某个环境没生效 <a class="header-anchor" href="#q-前端代码在某个环境没生效" aria-label="Permalink to &quot;Q: 前端代码在某个环境没生效&quot;">​</a></h3><p>按照如下步骤排查：</p><ul><li>search下关键字是否在浏览器的静态资源中出现：看下服务器上有无对应的代码</li><li>代码没有pick到暂存区：把master合并到目标分支</li><li>ci中，环境的git暂存区有内容导致ci拉不下来：git checkout掉</li><li>代码没有压缩，在src下有，在min下没有：走系统压缩下</li></ul><h3 id="q-如何给新仓库设置git" tabindex="-1">Q 如何给新仓库设置git <a class="header-anchor" href="#q-如何给新仓库设置git" aria-label="Permalink to &quot;Q 如何给新仓库设置git&quot;">​</a></h3><p>要设置 Git 项目的远程仓库，你需要进行以下几个步骤：</p><h4 id="_1-初始化-git-仓库-如果还没有初始化" tabindex="-1">1. <strong>初始化 Git 仓库（如果还没有初始化）</strong> <a class="header-anchor" href="#_1-初始化-git-仓库-如果还没有初始化" aria-label="Permalink to &quot;1. **初始化 Git 仓库（如果还没有初始化）**&quot;">​</a></h4><p>在你的项目目录中打开终端，运行以下命令来初始化 Git 仓库：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> init</span></span></code></pre></div><h4 id="_2-添加远程仓库" tabindex="-1">2. <strong>添加远程仓库</strong> <a class="header-anchor" href="#_2-添加远程仓库" aria-label="Permalink to &quot;2. **添加远程仓库**&quot;">​</a></h4><p>使用 <code>git remote add</code> 命令将远程仓库添加到你的本地 Git 仓库中。你需要知道远程仓库的 URL（可以是 HTTPS 或 SSH）。例如：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> remote</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> origin</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://github.com/username/repository.git</span></span></code></pre></div><p>或者，如果你使用 SSH：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> remote</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> origin</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> git@github.com:username/repository.git</span></span></code></pre></div><h4 id="_3-验证远程仓库设置" tabindex="-1">3. <strong>验证远程仓库设置</strong> <a class="header-anchor" href="#_3-验证远程仓库设置" aria-label="Permalink to &quot;3. **验证远程仓库设置**&quot;">​</a></h4><p>你可以使用以下命令来查看已配置的远程仓库：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> remote</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -v</span></span></code></pre></div><p>这将显示类似以下的输出：</p><div class="language-plaintext vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">plaintext</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>origin  https://github.com/username/repository.git (fetch)</span></span>
<span class="line"><span>origin  https://github.com/username/repository.git (push)</span></span></code></pre></div><h4 id="_4-推送代码到远程仓库" tabindex="-1">4. <strong>推送代码到远程仓库</strong> <a class="header-anchor" href="#_4-推送代码到远程仓库" aria-label="Permalink to &quot;4. **推送代码到远程仓库**&quot;">​</a></h4><p>将本地的代码推送到远程仓库。第一次推送时，通常会指定分支名称：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> push</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -u</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> origin</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> master</span></span></code></pre></div><p>（如果你的默认分支是 <code>main</code>，则使用 <code>main</code> 代替 <code>master</code>。）</p><h4 id="_5-修改远程仓库-url-如果需要" tabindex="-1">5. <strong>修改远程仓库 URL（如果需要）</strong> <a class="header-anchor" href="#_5-修改远程仓库-url-如果需要" aria-label="Permalink to &quot;5. **修改远程仓库 URL（如果需要）**&quot;">​</a></h4><p>如果需要更改远程仓库的 URL，可以使用：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> remote</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> set-url</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> origin</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> new-url</span></span></code></pre></div><p>例如：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> remote</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> set-url</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> origin</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://github.com/newusername/newrepository.git</span></span></code></pre></div><h4 id="_6-删除远程仓库-如果需要" tabindex="-1">6. <strong>删除远程仓库（如果需要）</strong> <a class="header-anchor" href="#_6-删除远程仓库-如果需要" aria-label="Permalink to &quot;6. **删除远程仓库（如果需要）**&quot;">​</a></h4><p>如果你需要删除某个远程仓库，可以使用：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> remote</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> remove</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> origin</span></span></code></pre></div><p>以上步骤涵盖了大部分常见的远程仓库操作。希望这些信息对你有所帮助！</p><h3 id="q-fatal-refusing-to-merge-unrelated-histories" tabindex="-1">Q fatal: refusing to merge unrelated histories <a class="header-anchor" href="#q-fatal-refusing-to-merge-unrelated-histories" aria-label="Permalink to &quot;Q fatal: refusing to merge unrelated histories&quot;">​</a></h3><p>参考下方</p><h3 id="q-如果两个分支没有关系-怎么强制合并" tabindex="-1">Q 如果两个分支没有关系，怎么强制合并？ <a class="header-anchor" href="#q-如果两个分支没有关系-怎么强制合并" aria-label="Permalink to &quot;Q 如果两个分支没有关系，怎么强制合并？&quot;">​</a></h3><p>这个错误通常发生在你尝试合并两个没有共同历史的分支时。要解决这个问题，你可以使用 <code>--allow-unrelated-histories</code> 选项来允许合并。运行以下命令：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> merge</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> branch-name</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --allow-unrelated-histories</span></span></code></pre></div><p>这将允许 Git 合并两个没有共同历史的分支。确保你在合并之前备份了重要数据，以防出现意外问题。</p><h3 id="q-如何在git中把文件删除" tabindex="-1">Q 如何在git中把文件删除 <a class="header-anchor" href="#q-如何在git中把文件删除" aria-label="Permalink to &quot;Q 如何在git中把文件删除&quot;">​</a></h3><p>要从 Git 缓存中删除某个文件，可以使用 <code>git rm --cached</code> 命令。执行以下步骤：</p><ol><li><p><strong>删除文件从缓存</strong>：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rm</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --cached</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> path/to/file</span></span></code></pre></div><p>这将从 Git 的缓存中删除文件，但保留本地文件。</p></li><li><p><strong>提交更改</strong>：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> commit</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -m</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Remove file from cache&quot;</span></span></code></pre></div></li></ol><p>这样，文件将不再被 Git 跟踪，但仍保留在你的工作目录中。</p><h2 id="ios" tabindex="-1">IOS <a class="header-anchor" href="#ios" aria-label="Permalink to &quot;IOS&quot;">​</a></h2><h3 id="q-图片旋转" tabindex="-1">Q: 图片旋转 <a class="header-anchor" href="#q-图片旋转" aria-label="Permalink to &quot;Q: 图片旋转&quot;">​</a></h3><ul><li><p>背景：互动这边有接到工单，客户反馈上传的图片会被旋转。</p></li><li><p>测试：ios及数码相机拍摄的图片，会带有exif信息，其中一个叫orientation的方向信息，会导致在部分pc浏览器以及安卓机型里面无法正常展示。EXIF查看器：<a href="https://exif.tuchong.com/" target="_blank" rel="noreferrer">https://exif.tuchong.com/</a> 可查询图片是否带有旋转参数。</p></li><li><p>测试b端和c端的时候可考虑这种情况，上传带有旋转参数的图片，看看是否都能正常展示 <img src="`+e+'" alt="[../images/5b2c305e278c857a4448cc7244b0758b0af5888c6e623e188655ad7999ee4e1b7356bf88e94199829032e10b5e63b4e5464759fea8de00d0c23bc5aaeaf0f1b7.png]"></p></li></ul><h2 id="html" tabindex="-1">html <a class="header-anchor" href="#html" aria-label="Permalink to &quot;html&quot;">​</a></h2><h3 id="q-白屏情况" tabindex="-1">Q: 白屏情况 <a class="header-anchor" href="#q-白屏情况" aria-label="Permalink to &quot;Q: 白屏情况&quot;">​</a></h3><ul><li>页面视觉被隐藏了</li></ul>',69),l=[h];function r(p,o,d,k,g,c){return a(),i("div",{"data-pagefind-body":!0},l)}const u=s(n,[["render",r]]);export{b as __pageData,u as default};
